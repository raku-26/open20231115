from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import csv

import csv
from datetime import datetime


def get_forex_pairs_for_all_pages():
    base_url = "https://fx.minkabu.jp/pair?page={}"
    options = Options()
    options.add_argument('--headless')

    webdriver_service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=webdriver_service, options=options)

    all_pairs_data = []  # 存储所有页面的数据

    for page in range(1, 5):  # 遍历4个页面
        print(f"正在处理页面: {page}")
        driver.get(base_url.format(page))

        try:
            box_element = WebDriverWait(driver, 30).until(
                EC.presence_of_element_located((By.CLASS_NAME, 'box.p5'))
            )
            titles = box_element.find_elements(By.CLASS_NAME, 'fbd')
            categories = box_element.find_elements(By.CLASS_NAME, 'fc-newscategory')
            times = box_element.find_elements(By.CLASS_NAME, 'fc-sub')

            for title, category, time in zip(titles, categories, times):
                title_text = title.text
                category_text = category.text
                time_text = time.text
                row_data = [title_text, category_text, time_text]
                all_pairs_data.append(row_data)
                print(row_data)
        except Exception as e:
            print("发生错误:", e)

    driver.quit()
    
    return all_pairs_data

pairs_data = get_forex_pairs_for_all_pages()

default_path = "C:/Users/luoho/OneDrive/文档/exchange_rate/"

def save_to_csv(data, path):
    today = datetime.now().strftime("%Y-%m-%d")  
    filename = f"forex_pairs_{today}.csv"  
    full_path = path + filename  
    headers = ["标题", "类别", "时间"]

    with open(full_path, 'w', newline='', encoding='utf-16') as file:
        writer = csv.writer(file)
        writer.writerow(headers)
        writer.writerows(data)

    print(f"数据已保存到 {full_path}")

save_to_csv(pairs_data, default_path)




| 步骤                            | 描述                                                                                                             |
|--------------------------------|------------------------------------------------------------------------------------------------------------------|
| 整理数据                       | - 整理汇率数据，包括通货对、买入价、卖出价、最高价、最低价和价格变动比。                                              |
| 分析市场趋势                   | - 评估每个货币对的趋势，判断是否上涨、下跌或横盘。                                                               |
|                                | - 分析波动性，考虑汇率的日内变动和历史波动率。                                                                      |
|                                | - 探讨波动原因，包括重大事件、利率变动等。                                                                           |
| 关注汇率变化较大的货币对       | - 识别波动较大的货币对，并分析其可能的原因和影响。                                                                 |
| 注重重要经济事件               | - 关注重大经济事件，如利率决议、就业数据发布等。                                                                  |
|                                | - 分析事件对货币对走势的潜在影响。                                                                                  |
| 制定交易策略                   | - 设定合理的交易策略，包括建立头寸、设定止损和获利目标。                                                          |
|                                | - 考虑风险管理，确定合适的风险控制措施。                                                                           |
| 汇报结论和建议                 | - 撰写报告，总结市场趋势、波动较大的货币对、重要经济事件和交易策略。                                              |
|                                | - 提出具体的交易建议，包括买入、卖出、持有或观望，附带理由和风险提示。                                            |
