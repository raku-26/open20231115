import tkinter as tk
import tkinter 
import os
import threading
import time
import openpyxl
import re
from tkinter import filedialog, dialog, END, DISABLED, NORMAL, messagebox
from tkinter.scrolledtext import ScrolledText
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from datetime import datetime,timedelta
from openpyxl import load_workbook
from webdriver_manager.chrome import ChromeDriverManager
from selenium.common.exceptions import NoSuchElementException




def get_vix():
    url = "https://kabushiki.jp/market/indexes/VIX000000"
    options = Options()
    options.add_argument('--headless')
    options.add_argument("--disable-gpu")  
    options.add_argument("--no-sandbox")  
    options.add_argument("--disable-dev-shm-usage")  
    options.add_argument("--disable-extensions")  
    options.add_argument("--disable-notifications") 
    options.add_argument("--disable-infobars")  
    options.add_argument("--disable-images")
    options.add_argument("--window-size=1920,1080")

    webdriver_service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=webdriver_service, options=options)
    driver.get(url)
    try:
        rate_element = WebDriverWait(driver, 30).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, 'p.rate-main'))
        )

        rate_value_str = rate_element.text.strip()
        print(f"Raw rate value: {rate_value_str}")  
        rate_value = float(rate_value_str) 
    except Exception as e:
        print("エラー:", e)
        rate_value = None
    finally:
        driver.quit()
    return rate_value



def jp_cal_profit(user):
    options = Options()
    options.add_argument("--headless") 
    driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)
    url = "https://site1.sbisec.co.jp/" 
    driver.get(url)
    user_id_input = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, "input[name='user_id']")))
    user_id_input.send_keys(user.account)  
    user_password_input = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, "input[name='user_password']")))
    user_password_input.send_keys(user.password)
    login_button = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, "input[name='ACT_login']")))
    login_button.click()
    account_button = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, "img[alt='口座管理']")))
    account_button.click()
    try:
        table = WebDriverWait(driver, 30).until(EC.presence_of_element_located((By.CSS_SELECTOR, 'table[border="0"][cellspacing="1"][cellpadding="1"][width="400"]')))
    except NoSuchElementException:
        print("没有找到元素")
    rows = table.find_elements(By.TAG_NAME, 'tr')
    jp_total = 0  
    fund_rows = []  
    for row_number, row in enumerate(rows, start=1):
        cells = row.find_elements(By.TAG_NAME, 'td')
        for column_number, cell in enumerate(cells, start=1):
            if cell.text and (funds_JP.name1 in cell.text):
                fund_rows.append(row_number)
        # print(' | '.join([cell.text for cell in cells]))
    for fund_row in fund_rows:
        if fund_row < len(rows):
            below_cell_value = rows[fund_row].find_elements(By.TAG_NAME, 'td')[3].text
            print(f'Below cell: {below_cell_value}')
            jp_total += int(below_cell_value.replace(',', '').replace('+', ''))
    print(f'jp收益: {jp_total}')
    return jp_total
